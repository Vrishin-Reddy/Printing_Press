{
  "meta": {
    "project": "Sri Sharada Press Website",
    "date": "2025-08-17",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "Sri Sharada Press Website is a marketing and booking platform designed to showcase printing services, portfolio, testimonials, and company information. It enables prospective and returning customers to quickly submit booking and contact requests through validated, client-side forms powered by Web3Forms, all within a fast, accessible, mobile-first React application deployed as a static site on Vercel.",
  "core_goals": [
    "Enable customers to quickly submit booking and contact requests with reliable email delivery to the business inbox.",
    "Showcase services, portfolio, testimonials, and detailed company information to inform and attract customers.",
    "Deliver a fast, accessible, and mobile-first user experience optimized for Core Web Vitals.",
    "Deploy and maintain the site with zero backend infrastructure by leveraging static hosting and third-party form handling.",
    "Maintain secure and privacy-conscious operations by minimizing data collection and using public access keys for form submissions."
  ],
  "key_features": [
    "Static React+Vite app with React Router for smooth client-side routing and TanStack Query for data management.",
    "Comprehensive marketing pages: Home with hero and featured services, Services listing, Portfolio showcase, Testimonials, and About page with company details.",
    "Robust Booking form equipped with client-side validation, file upload support (PDF, PNG, JPG, SVG, TIFF), and submission to Web3Forms API with access key.",
    "Feature-rich Contact form accepting optional deadline, WhatsApp opt-in, file attachments, and hidden honeypot to mitigate spam, all integrated using React Hook Form and Zod validation.",
    "Smart Email Link component that opens the system mail app on mobile and prompts for Gmail, Outlook Web, or default mail client on desktop, with clipboard fallback.",
    "Consistent UI component library using Tailwind CSS and shadcn/ui primitives for buttons, inputs, dialogs, and toasts via Sonner, ensuring accessibility and responsiveness.",
    "Spam prevention through hidden honeypot fields and domain allow-listing at the Web3Forms level.",
    "Client-side file size enforcement (default 10 MB) and accepted file type restrictions on uploads.",
    "Page view analytics via Vercel Analytics with no Personally Identifiable Information stored."
  ],
  "user_flow_summary": [
    "Visitors land on the Home page to explore service highlights, testimonials, and company info with clear calls-to-action to book a service or contact the business.",
    "Users navigate to the Services page to view detailed service offerings and select options relevant to their printing needs.",
    "Prospective customers fill out the Booking form, completing fields such as name, email, phone, service selection, dimensions, quantity, preferred date, additional info, and optional file attachments; upon submission, users receive immediate feedback via toasts and form resets.",
    "Users can navigate to the Contact page to send inquiries, optionally specifying deadlines, consenting to WhatsApp follow-up, and attaching files; submission triggers validation followed by success or error toasts.",
    "Email links in the footer and contact details trigger the Email Link component behavior to open the preferred mail client or offer alternatives, ensuring smooth communication initiation across devices.",
    "On any route, invalid paths show a user-friendly 404 Not Found page guiding users back to existing content."
  ],
  "validation_criteria": [
    "Successful static build and deployment on Vercel using Vite with output in the dist/ directory and no serverless functions.",
    "Booking and Contact forms submit data via multipart/form-data POST requests to Web3Forms API, including the configured access key, validated client-side, with visible progress indicators and single submission enforcement.",
    "Confirmation toasts appear on successful form submissions, and forms reset to initial state; error toasts display Web3Forms error messages if submission fails.",
    "Emails must be reliably delivered to the configured inbox sspress.1912@gmail.com with all attachments included as per submission.",
    "Email Link component behavior matches requirements: system mail app opens on mobile; on desktop, user is prompted to select Gmail, Outlook Web, or default mail client, with fallback to clipboard copy on navigation failure.",
    "Accessibility standards are met with focus states, ARIA attributes where applicable, and keyboard navigability; Lighthouse scores for accessibility and performance meet or exceed 90.",
    "All uploaded files conform to client-side validation on file type and size constraints, preventing unsupported or oversized attachments.",
    "Analytics data collection via Vercel Analytics occurs without storing any PII or sensitive user data.",
    "Single Toaster component mounted at the root of the app enables rich-colored toast notifications with close buttons for user feedback.",
    "Robust spam mitigation in place including honeypot fields and domain allow-list configuration in Web3Forms settings."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite 5",
      "Tailwind CSS",
      "shadcn/ui",
      "React Router",
      "TanStack Query",
      "React Hook Form",
      "Zod",
      "Sonner",
      "Vercel Analytics"
    ],
    "features": [
      {
        "name": "App shell and routing",
        "description": "Root app composition with router, query client, tooltip provider, and global Toaster.",
        "files": [
          "src/main.tsx",
          "src/App.tsx",
          "src/components/Navbar.tsx",
          "src/components/Footer.tsx",
          "src/components/ScrollToTop.tsx",
          "src/components/layout/Container.tsx"
        ]
      },
      {
        "name": "Home and marketing sections",
        "description": "Homepage hero, services highlights, testimonials, printing process, and why-choose section.",
        "files": [
          "src/pages/Index.tsx",
          "src/components/Hero.tsx",
          "src/components/ServicesSection.tsx",
          "src/components/PrintingProcess.tsx",
          "src/components/WhyChooseFlexPrint.tsx",
          "src/components/HomeTestimonials.tsx"
        ]
      },
      {
        "name": "Services listing",
        "description": "Service cards and list for the services page.",
        "files": [
          "src/pages/Services.tsx",
          "src/components/ServiceCard.tsx",
          "src/components/ServicesList.tsx"
        ]
      },
      {
        "name": "Portfolio and testimonials pages",
        "description": "Static portfolio and testimonials routes.",
        "files": [
          "src/pages/Portfolio.tsx",
          "src/pages/Testimonials.tsx"
        ]
      },
      {
        "name": "About page",
        "description": "About page with company information and sections.",
        "files": [
          "src/pages/About.tsx",
          "src/components/AboutPage.tsx",
          "src/components/AboutSection.tsx"
        ]
      },
      {
        "name": "Booking flow",
        "description": "Booking form with validation, file upload, and Web3Forms submission.",
        "files": [
          "src/pages/Booking.tsx",
          "src/components/BookingForm.tsx",
          "src/components/FileUpload.tsx",
          "src/components/ServicesList.tsx"
        ]
      },
      {
        "name": "Contact flow",
        "description": "Contact form using RHF+Zod with Web3Forms via reusable hook and helper.",
        "files": [
          "src/pages/Contact.tsx",
          "src/hooks/useWeb3Submit.ts",
          "src/lib/web3forms.ts"
        ]
      },
      {
        "name": "Email link behavior",
        "description": "Opens system mail app on mobile; desktop prompt for Gmail/Outlook/default.",
        "files": [
          "src/components/EmailLink.tsx"
        ]
      },
      {
        "name": "UI component library",
        "description": "shadcn/ui-based primitives (buttons, inputs, dialogs, etc).",
        "files": [
          "src/components/ui/button.tsx",
          "src/components/ui/input.tsx",
          "src/components/ui/textarea.tsx",
          "src/components/ui/select.tsx",
          "src/components/ui/toaster.tsx",
          "src/components/ui/alert-dialog.tsx",
          "src/components/ui/dialog.tsx",
          "src/components/ui/*"
        ]
      },
      {
        "name": "Hooks and utilities",
        "description": "Common hooks and utilities for responsiveness, toasts, and class utilities.",
        "files": [
          "src/hooks/use-mobile.tsx",
          "src/hooks/use-toast.ts",
          "src/lib/utils.ts",
          "src/utils/whatsapp.ts",
          "src/utils/emailService.ts"
        ]
      },
      {
        "name": "Routing pages and 404",
        "description": "Additional routes and not-found page.",
        "files": [
          "src/pages/NotFound.tsx",
          "src/pages/legacy.tsx"
        ]
      },
      {
        "name": "Configuration",
        "description": "Build tooling, Tailwind and TypeScript configuration, and Vite setup.",
        "files": [
          "vite.config.ts",
          "tailwind.config.ts",
          "tsconfig.json",
          "tsconfig.app.json",
          "tsconfig.node.json",
          "eslint.config.js",
          "postcss.config.js"
        ]
      }
    ]
  }
}
